#!/usr/bin/env python3
#
# Solution to Project Euler problem 2
# Copyright (c) ThinDo. All rights reserved.
#
# https://github.com/thindo/projecteuler
#

'''
Each new term in the Fibonacci sequence is generated by adding
the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence
whose values do not exceed four million, find the sum of the even-valued terms.
'''


def solve(limit):
    sequence_sum = 0
    current_number = 1  # the current Fibonacci number being processed
    next_number = 2  # the next Fibonacci number in the sequence
    while current_number <= limit:
        if current_number % 2 == 0:
            sequence_sum += current_number
        current_number, next_number = next_number, current_number + next_number
    return sequence_sum


def main():
    print(solve(4000000))


if __name__ == "__main__":
    main()

'''
Here is the beginning of the Fibonacci sequence with even numbers
1   1   2   3  5  8   13  21  34  55  89   144  ...
a   b   c   a  b  c   a   b   c   a   b     c
It is easy to prove that every third Fibonacci number is even.
'''
